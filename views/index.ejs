<!doctype html>
<html lang="vi" class="dark">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>iBanking Tuition — Thanh toán học phí</title>

  <!-- Font -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700;800&display=swap" rel="stylesheet">

  <!-- Tailwind -->
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      darkMode: 'class',
      theme: {
        extend: {
          fontFamily: { sans: ['Inter', 'ui-sans-serif', 'system-ui'] },
          colors: { brand: { DEFAULT:'#22c55e', 600:'#16a34a' }, night:'#0b1220' },
          boxShadow: {
            glow: '0 0 0 4px rgba(34,197,94,.28)',
            soft: '0 10px 30px -10px rgba(0,0,0,.5)',
            neon: '0 8px 24px -6px rgba(34,197,94,.45)'
          }
        }
      }
    }
  </script>

  <!-- Icons -->
  <script src="https://unpkg.com/@phosphor-icons/web"></script>

  <link rel="stylesheet" href="/css/style.css">

</head>
<body class="min-h-screen bg-fintech text-slate-100 font-sans antialiased">

  <!-- Accessibility: skip link -->
  <a href="#mainContent" class="sr-only focusable">Skip to main content</a>

  <!-- Top announcement strip (red) -->
  <div id="topStrip" class="top-strip fixed top-0 left-0 right-0 z-40">
    <div class="mx-auto max-w-6xl px-4 sm:px-6 lg:px-8">
      <div class="py-2 text-sm text-white flex items-center justify-between">
        <div class="flex items-center gap-3">
          <i class="ph ph-megaphone"></i>
          <span>Chào mừng bạn đến với hệ thống thanh toán online</span>
        </div>
      </div>
    </div>
  </div>

  <!-- Main header (white, centered logo + title) -->
  <header id="mainHeader" class="main-header fixed left-0 right-0 z-30">
    <div class="mx-auto max-w-6xl px-4 sm:px-6 lg:px-8">
      <div class="flex items-center justify-between py-6">
        <div class="flex items-center gap-6">
          <img src="/image/logo.png" alt="logo" class="h-14 w-auto block">
          <div class="text-center md:text-left">
            <div class="text-xl font-extrabold text-slate-900">TRƯỜNG ĐẠI HỌC TÔN ĐỨC THẮNG</div>
            <div class="text-sm text-slate-600">CỔNG THANH TOÁN TRỰC TUYẾN</div>
          </div>
        </div>
        <div class="flex items-center gap-3">
          <button id="loginBtn" class="px-3 py-2 rounded-md btn-rose text-sm">Đăng nhập</button>
          <div class="hidden items-center gap-2" id="profileSection">
            <div class="text-right">
              <div class="text-sm font-medium text-slate-900">Số dư khả dụng</div>
              <div id="headerBalance" class="text-lg font-bold text-brand">-</div>
            </div>
            <button id="profileBtn" class="p-2 rounded-md bg-brand/20 hover:bg-brand/30 transition-colors" title="Hồ sơ">
              <i class="ph ph-user-circle text-xl text-emerald-500"></i>
            </button>
          </div>
        </div>
      </div>
    </div>
  </header>

  <!-- Hero: full-width background with left text and right search card -->
  <section class="hero bg-hero bg-cover bg-center relative" aria-hidden="false">
    <div class="hero-overlay"></div>
    <div class="mx-auto max-w-6xl px-4 sm:px-6 lg:px-8 py-28">
      <div class="grid grid-cols-1 lg:grid-cols-12 gap-8 items-center">
        <!-- Left: large heading and description -->
        <div class="lg:col-span-7 text-white">
          <h1 class="text-4xl lg:text-3xl font-extrabold tracking-tight">HỆ THỐNG THANH TOÁN TRỰC TUYẾN - TDTU</h1>
          <div class="w-200 h-0.5 bg-white/70 my-6"></div>
          <p class="text-lg text-white/85 leading-relaxed">Cổng thanh toán trực tuyến sử dụng để người học thanh toán học phí tại trường Đại học Tôn Đức Thắng. Thanh toán an toàn, nhanh chóng, hỗ trợ nhiều hình thức.</p>
          <ul class="mt-5 space-y-2 text-white/80">
            <li>• Thanh toán an toàn, nhanh chóng, hỗ trợ nhiều hình thức.</li>
            <li>• Nộp học phí nhanh chóng, không phải xếp hàng.</li>
            <li>• Hỗ trợ thẻ ngân hàng (ATM, Visa, Master).</li>
            <li>• Lưu lịch sử giao dịch, theo dõi dễ dàng.</li>
          </ul>
        </div>

        <!-- Right: dark search card (keeps existing input IDs) -->
        <div class="lg:col-span-5">
          <div class="search-card rounded-xl p-6 shadow-neon">
            <label class="text-sm text-white/80">Tra cứu học phí</label>
            <div class="mt-3 relative">
              <i class="ph ph-identification-badge absolute left-4 top-1/2 -translate-y-1/2 text-white/70"></i>
              <input id="mssv" autofocus class="w-full pl-12 pr-36 py-4 rounded-md border border-white/10 bg-white/5 text-white placeholder-white/70 outline-none" placeholder="Nhập MSSV">
              <button id="lookupBtn" class="absolute right-1 top-1/2 -translate-y-1/2 h-11 px-6 rounded-md bg-rose-800 text-white font-semibold hover:brightness-95">Tìm kiếm <span class="ml-3">→</span></button>
            </div>
            <div id="lookupErr" class="text-sm text-rose-300 mt-3 min-h-[1.25rem]"></div>
            <!-- hero quick-pay removed as requested -->
          </div>
        </div>
      </div>
    </div>
  </section>

    <!-- Result & Quick pay -->
  <main class="mx-auto max-w-6xl px-4 sm:px-6 lg:px-8 mt-6 grid grid-cols-1 lg:grid-cols-3 gap-6">
    <!-- Result -->
    <section class="lg:col-span-2 card pop">
      <div class="p-6 sm:p-8">
        <div class="flex items-center justify-between mb-4">
          <h2 class="text-lg font-semibold flex items-center gap-2"><i class="ph ph-receipt"></i> Thông tin học phí</h2>
        </div>

        <!-- loading -->
        <div id="skeleton" class="hidden">
          <div class="animate-pulse space-y-3">
            <div class="h-4 bg-slate-700/40 rounded w-1/3"></div>
            <div class="h-4 bg-slate-700/40 rounded w-1/2"></div>
            <div class="h-4 bg-slate-700/40 rounded w-1/4"></div>
          </div>
        </div>
        <div id="result" class="text-sm text-slate-300">Vui lòng nhập MSSV để tra cứu.</div>
      </div>
    </section>

    <!-- Quick pay -->
    <aside class="card pop">
      <div class="p-6 sm:p-8">
        <h3 class="text-lg font-semibold flex items-center gap-2"><i class="ph ph-lightning"></i> Thanh toán nhanh</h3>
        <p class="text-slate-300/80 text-sm mt-1">Dùng kết quả tra cứu hiện tại để thực hiện thanh toán OTP.</p>
        <div class="mt-4">
          <button id="payBtn" class="w-full btn-rose">
            <i class="ph ph-credit-card"></i> Thanh toán ngay
          </button>
          <div id="payErr" class="text-sm text-rose-400 min-h-[1.25rem] mt-2"></div>
        </div>
      </div>
    </aside>
  </main>

  <!-- Recent table -->
  <section class="mx-auto max-w-6xl px-4 sm:px-6 lg:px-8 mt-6 mb-12">
    <div class="rounded-3xl border border-white/10 bg-white/10 backdrop-blur-xl shadow-soft pop">
      <div class="p-6 sm:p-8">
        <div class="flex items-center justify-between mb-3">
          <h3 class="text-lg font-semibold flex items-center gap-2"><i class="ph ph-clock-counter-clockwise"></i> Giao dịch gần đây</h3>
        </div>
        <div class="overflow-x-auto">
          <table class="w-full text-sm">
            <thead class="text-left text-slate-300/75 border-b border-white/10">
              <tr>
                <th class="py-2">Thời gian</th>
                <th class="py-2">MSSV</th>
                <th class="py-2">Số tiền</th>
                <th class="py-2">Trạng thái</th>
              </tr>
            </thead>
            <tbody id="recentTbody" class="divide-y divide-white/10"></tbody>
          </table>
        </div>
      </div>
    </div>
  </section>

  <!-- Backdrop & Modals -->
  <div id="modalBackDrop" class="fixed inset-0 bg-black/60 hidden items-center justify-center p-4 z-50"></div>

  <!-- Login Modal -->
  <div id="loginModal" class="hidden fixed inset-0 z-50 grid place-items-center p-4">
    <div class="w-full max-w-md modal-card p-6 shadow-soft zoom">
      <div class="flex items-center justify-between mb-4">
        <h3 class="text-lg font-semibold">Đăng nhập</h3>
        <button class="modal-close-btn" data-close aria-label="Đóng">✕</button>
      </div>

      <label class="text-sm text-slate-300">Tài khoản</label>
      <input name="username" id="lgUser" type="text" class="mt-1 w-full rounded-lg border border-white/12 bg-transparent px-3 py-2 outline-none focus:shadow-glow" placeholder="user01">
      <label class="text-sm text-slate-300 mt-3">Mật khẩu</label>
      <div class="relative mt-1">
        <input name="password" id="lgPass" type="password" class="w-full rounded-lg border border-white/12 bg-transparent px-3 py-2 pr-10 outline-none focus:shadow-glow" placeholder="123456">
        <button type="button" id="togglePassword" class="absolute right-3 top-1/2 -translate-y-1/2 text-slate-400 hover:text-slate-300 transition-colors" title="Hiện/ẩn mật khẩu">
          <i id="eyeIcon" class="ph ph-eye text-lg"></i>
        </button>
      </div>
      <div id="lgErr" class="text-sm text-rose-400 mt-2 min-h-[1.25rem]"></div>
      <div class="flex justify-end gap-3 mt-4">
        <button type="submit" id="doLogin" class="rounded-lg bg-gradient-to-r from-brand to-emerald-400 px-4 py-2 font-semibold text-emerald-950 hover:scale-[.98] active:scale-95 transition shadow-neon">Đăng nhập</button>
      </div>
    </div>
  </div>

  <!--Profile Modal-->
  <div id="profileModal" class="hidden fixed inset-0 z-50 grid place-items-center p-4">
    <div class="w-full max-w-md modal-card p-6 shadow-soft zoom">
      <div class="flex items-start justify-between mb-4">
        <div class="flex items-center gap-3">
          <div class="w-12 h-12 bg-brand/20 rounded-full flex items-center justify-center">
            <i class="ph ph-user text-xl text-emerald-500"></i>
          </div>
          <div>
            <h3 class="text-lg font-semibold">Hồ sơ người dùng</h3>
            <p class="text-sm text-slate-300/80">Thông tin tài khoản</p>
          </div>
        </div>
        <button class="modal-close-btn" data-close aria-label="Đóng">✕</button>
      </div>

      <div class="space-y-4">
        <div class="p-4 rounded-xl bg-white/5 border border-white/10">
          <div class="grid grid-cols-1 gap-3">
            <div>
              <label class="text-sm text-slate-300/80">Tên đăng nhập</label>
              <p id="profileUsername" class="text-white font-medium">-</p>
            </div>
            <div>
              <label class="text-sm text-slate-300/80">User ID</label>
              <p id="profileUserId" class="text-white font-medium">-</p>
            </div>
            <div>
              <label class="text-sm text-slate-300/80">Họ và tên</label>
              <p id="profileFullname" class="text-white font-medium">-</p>
            </div>
            <div>
              <label class="text-sm text-slate-300/80">Email</label>
              <p id="profileEmail" class="text-white font-medium">-</p>
            </div>
            <div>
              <label class="text-sm text-slate-300/80">Số điện thoại</label>
              <p id="profilePhone" class="text-white font-medium">-</p>
            </div>
            <!-- <div>
              <label class="text-sm text-slate-300/80">Số dư khả dụng</label>
              <p id="profileBalance" class="text-white font-medium text-brand">-</p>
            </div> -->
          </div>
        </div>
      </div>

      <div class="flex justify-end gap-3 mt-6">
        <button id="profileLogout" class="rounded-lg border border-rose-500/50 bg-rose-500/20 px-4 py-2 text-rose-300 hover:bg-rose-500/30">
          <i class="ph ph-sign-out mr-2"></i>Đăng xuất
        </button>
        <button class="rounded-lg border border-white/10 bg-white/6 px-4 py-2 hover:bg-white/10" data-close>Đóng</button>
      </div>
    </div>
  </div>

  <!-- OTP Modal -->
  <div id="otpModal" class="hidden fixed inset-0 z-50 grid place-items-center p-4">
    <div class="w-full max-w-md rounded-2xl border border-white/12 bg-slate-900/85 backdrop-blur-2xl p-6 shadow-soft zoom">
      <div class="flex items-center justify-between mb-3">
        <h3 class="text-lg font-semibold">Xác nhận OTP</h3>
        <button class="close px-2 py-1 rounded-lg border border-white/10 bg-white/10 hover:bg-white/15" data-close>✕</button>
      </div>
      <p id="otpHint" class="text-sm text-slate-300/80">Nhập mã OTP (6 chữ số) vừa được gửi email.</p>
      <label class="mt-3 text-sm text-slate-300">Mã OTP</label>
      <input id="otpCode" inputmode="numeric" maxlength="6" class="mt-1 w-full rounded-xl border border-white/12 bg-slate-900/70 px-3 py-2 outline-none focus:shadow-glow" placeholder="123456">
      <div id="otpErr" class="text-sm text-rose-400 mt-2 min-h-[1.25rem]"></div>
      <div class="flex justify-end mt-4">
        <button id="doConfirm" class="rounded-xl bg-gradient-to-r from-brand to-emerald-400 px-4 py-2 font-semibold text-emerald-950 hover:scale-[.98] active:scale-95 transition shadow-neon">Xác nhận</button>
      </div>
    </div>
  </div>

  <!-- Welcome Modal -->
  <div id="welcomeModal" class="hidden fixed inset-0 z-50 grid place-items-center p-4" role="dialog" aria-modal="true" aria-labelledby="welcomeTitle" aria-describedby="welcomeDesc">
    <div class="w-full max-w-4xl rounded-3xl border border-white/8 bg-gradient-to-br from-slate-900/85 to-slate-800/75 backdrop-blur-2xl p-6 md:p-8 shadow-neon zoom">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6 items-center">
        <!-- Left: Illustration -->
        <div class="welcome-left rounded-xl overflow-hidden bg-gradient-to-tr from-emerald-600/10 to-sky-400/6 p-1">
          <img src="/image/Welcome.jpg" alt="Welcome" class="welcome-illustration w-full h-56 md:h-72 object-cover rounded-lg shadow-soft">
        </div>

        <!-- Right: Content -->
        <div class="welcome-right text-left">
          <div class="flex items-start justify-between">
            <div>
              <h3 id="welcomeTitle" class="text-2xl md:text-3xl font-extrabold">Chào mừng đến với iBanking Tuition</h3>
              <p id="welcomeDesc" class="text-sm md:text-base text-slate-300/80 mt-2">Tra cứu & thanh toán học phí nhanh chóng, an toàn. Dễ dàng kiểm tra số tiền cần nộp và thực hiện thanh toán trực tuyến qua OTP.</p>
            </div>
            <button aria-label="Đóng" class="close ml-4 px-2 py-1 rounded-lg border border-white/10 bg-white/10 hover:bg-white/15" data-close title="Đóng">✕</button>
          </div>

          <ul class="mt-4 space-y-2 text-sm text-slate-200/85">
            <li class="flex items-start gap-3"><span class="inline-grid place-items-center text-emerald-300 bg-emerald-500/10 rounded-full w-7 h-7"><i class="ph ph-check-bold"></i></span> Tra cứu theo MSSV — nhanh, chính xác.</li>
            <li class="flex items-start gap-3"><span class="inline-grid place-items-center text-amber-300 bg-amber-500/10 rounded-full w-7 h-7"><i class="ph ph-lock"></i></span> Thanh toán an toàn bằng OTP.</li>
            <li class="flex items-start gap-3"><span class="inline-grid place-items-center text-sky-300 bg-sky-500/10 rounded-full w-7 h-7"><i class="ph ph-clock"></i></span> Lưu lịch sử giao dịch nhanh chóng.</li>
          </ul>

          <div class="mt-6 flex items-center gap-3">
            <button id="welcomeStart" class="rounded-2xl bg-gradient-to-r from-brand to-emerald-400 px-5 py-3 font-semibold text-emerald-950 hover:scale-[.98] active:scale-95 transition shadow-neon">Bắt đầu</button>
            <button class="rounded-2xl border border-white/10 bg-white/6 px-4 py-3 text-sm text-slate-200/90 hover:bg-white/10" data-close>Đóng</button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Toast -->
  <div id="toast" class="fixed bottom-4 right-4 hidden max-w-sm rounded-xl border border-white/10 bg-slate-900/92 backdrop-blur px-4 py-3 text-slate-100 shadow-soft slide-in"></div>

  <!-- Logic -->
  <script>
    // (theme toggle removed)

  // ===== Globals / State =====
  const $ = (s,el=document)=>el.querySelector(s);
  let queued = null;

  const tokenKey='token', userKey='user';
  const DEFAULT_API='http://localhost:8080';

  // Read API base from localStorage if set, otherwise use default.
  function api(){ return (localStorage.getItem('apiBase') || DEFAULT_API).replace(/\/$/, ''); }

    function token(){ return localStorage.getItem(tokenKey) || '' }
    function setAuth(t,u){ localStorage.setItem(tokenKey,t); localStorage.setItem(userKey,JSON.stringify(u)); renderAuth(); }
    function clearAuth(){ localStorage.removeItem(tokenKey); localStorage.removeItem(userKey); localStorage.removeItem('userDetails'); renderAuth(); }
    function renderAuth(){ 
      const on=!!token(); 
      $('#loginBtn').classList.toggle('hidden',on); 
      $('#profileSection').classList.toggle('hidden',!on);
      $('#profileSection').classList.toggle('flex',on);
      
      if(on) {
        updateHeaderBalance();
      }
    }
    renderAuth();

    function authFetch(path, opts={}){
      const headers = Object.assign({'Content-Type':'application/json'}, opts.headers||{});
      if (token()) headers['Authorization'] = 'Bearer ' + token();
      return fetch(api()+path, Object.assign({}, opts, { headers }));
    }

    // ===== Toast =====
    function toast(text){ const t=$('#toast'); t.textContent=text; t.classList.remove('hidden'); t.classList.add('slide-in'); setTimeout(()=> t.classList.add('hidden'), 2400); }

    // ===== Backdrop & Modal =====
    const backdrop = $('#modalBackDrop');

    function openModal(sel){ 
      backdrop.classList.remove('hidden'); 
      backdrop.classList.add('flex'); 
      $(sel).classList.remove('hidden'); 
    }

    function closeAll(){ 
      backdrop.classList.add('hidden'); 
      ['#loginModal','#otpModal','#welcomeModal','#profileModal'].forEach(id=>$(id).classList.add('hidden')); 
    }

    document.querySelectorAll('[data-close]').forEach(b=> b.addEventListener('click', closeAll));
    backdrop.addEventListener('click', closeAll);

    // ===== Lookup Tuition =====
    let lastLookup = null;
    $('#lookupBtn').addEventListener('click', async ()=>{
      const mssv = $('#mssv').value.trim();
      $('#lookupErr').textContent=''; $('#result').innerHTML='';
      if(!mssv){ $('#lookupErr').textContent='Vui lòng nhập MSSV'; return; }
      $('#skeleton').classList.remove('hidden');

      try{
        const res = await authFetch('/api/students?'+new URLSearchParams({ mssv }), { method:'GET' });
        if(res.status===401){ queued = ()=> $('#lookupBtn').click(); openModal('#loginModal'); return; }
        const data = await res.json();
        if(!res.ok) throw new Error(data?.message || 'Tra cứu thất bại');

        lastLookup = data;
        const html = `
          <div class="border border-white/12 rounded-2xl p-4 bg-white/5">
            <div class="grid grid-cols-1 sm:grid-cols-2 gap-3">
              <div><span class="text-slate-300/90">MSSV:</span> <b>${data.student.mssv}</b></div>
              <div><span class="text-slate-300/90">Họ tên:</span> <b>${data.student.full_name}</b></div>
              <div><span class="text-slate-300/90">Tổng phải nộp:</span> <b>${fmt(data.invoice?.amount_due)}</b></div>
              <div><span class="text-slate-300/90">Đã nộp:</span> <b>${fmt(data.invoice?.amount_paid)}</b></div>
              <div class="sm:col-span-2">
                <span class="text-slate-300/90">Trạng thái:</span>
                <span class="inline-flex items-center gap-1 px-3 py-1 rounded-full text-sm font-semibold shadow-md ${tagColor(data.invoice?.status)}">
                  ${statusIcon(data.invoice?.status)} ${data.invoice?.status || '-'}
                </span>
              </div>              
            </div>
          </div>`;
        $('#result').innerHTML = html;
      }catch(e){
        $('#lookupErr').textContent = e.message || 'Lỗi không xác định';
        lastLookup = null;
      }
      finally{
        $('#skeleton').classList.add('hidden');
      }
    });

    function statusIcon(txt=''){
      const t = (txt||'').toLowerCase();
      if(t.includes('đã')||t.includes('paid')) return '<i class="ph ph-check-circle"></i>';
      if(t.includes('chờ')||t.includes('pending')) return '<i class="ph ph-hourglass"></i>';
      if(t.includes('quá')||t.includes('overdue')) return '<i class="ph ph-x-circle"></i>';
      return '<i class="ph ph-info"></i>';
    }

    function tagColor(text=''){
      const t=text.toLowerCase();
      if(t.includes('đã')||t.includes('paid')) 
        return 'bg-emerald-500 text-white border border-emerald-600';
      if(t.includes('chờ')||t.includes('pending')) 
        return 'bg-amber-500 text-black border border-amber-600';
      if(t.includes('quá')||t.includes('overdue')) 
        return 'bg-rose-600 text-white border border-rose-700';
      return 'bg-slate-500 text-white border border-slate-600';
    }    
    
    function fmt(v){ 
      return (v==null)?'-':Number(v).toLocaleString('vi-VN',{style:'currency',currency:'VND'}); 
    }

    // ===== Pay (prepare + OTP) =====
    let lastPayment = null;
    $('#payBtn').addEventListener('click', ()=> ensureLoginThen(doPrepare));

    async function doPrepare(){
      $('#payErr').textContent='';
      try{
        const mssv = $('#mssv').value.trim();
        if(!mssv || !lastLookup){ 
          $('#payErr').textContent='Vui lòng tra cứu MSSV trước'; 
          return; 
        }
        const res = await authFetch('/api/payments/prepare', { 
          method:'POST', 
          body: JSON.stringify({ mssv }) 
        });
        const data = await res.json();
        if(!res.ok) throw new Error(data?.message || 'Gửi OTP thất bại');

        lastPayment = { id: data.payment_id, otp_id: data.otp_id };
        $('#otpHint').textContent = `Nhập OTP cho giao dịch #${data.payment_id}.`;
        openModal('#otpModal');
        toast('Đã gửi OTP tới email');
      }catch(e){ $('#payErr').textContent = e.message || 'Lỗi không xác định'; }
    }

    $('#doConfirm').addEventListener('click', async ()=>{
      $('#otpErr').textContent='';
      try{
        const code = $('#otpCode').value.trim();
        if(!lastPayment){ $('#otpErr').textContent='Không tìm thấy giao dịch'; return; }
        const res = await authFetch(`/api/payments/${lastPayment.id}/confirm?`+new URLSearchParams({ otp_id: lastPayment.otp_id }), {
          method:'POST', body: JSON.stringify({ otp: code })
        });
        const data = await res.json();
        if(!res.ok) throw new Error(data?.message || 'Xác nhận thất bại');
        closeAll();
        toast('Thanh toán thành công!');
        addRecent($('#mssv').value, fmt(data.amount || lastLookup?.invoice?.amount_due || 0), 'Đã thanh toán');
      }catch(e){ $('#otpErr').textContent = e.message || 'Lỗi không xác định'; }
    });

    function addRecent(mssv, amount, status){
      const tr=document.createElement('tr'); const now=new Date();
      tr.innerHTML = `
        <td class="py-2">${now.toLocaleString('vi-VN')}</td>
        <td class="py-2">${mssv}</td>
        <td class="py-2">${amount}</td>
        <td class="py-2"><span class="inline-flex items-center gap-1 px-2.5 py-1 rounded-full text-xs border ${tagColor(status)}">
          ${statusIcon(status)} ${status}
        </span></td>`;
      $('#recentTbody').prepend(tr);
    }

    // ===== Login =====
    $('#loginBtn').addEventListener('click', ()=> openModal('#loginModal'));

    // Password toggle
    $('#togglePassword').addEventListener('click', ()=> {
      const passwordInput = $('#lgPass');
      const eyeIcon = $('#eyeIcon');
      const isPassword = passwordInput.type === 'password';
      
      passwordInput.type = isPassword ? 'text' : 'password';
      eyeIcon.className = isPassword ? 'ph ph-eye-slash text-lg' : 'ph ph-eye text-lg';
    });

    $('#doLogin').addEventListener('click', async ()=>{
      $('#lgErr').textContent='';
      try{
        const payload={ 
          username: $('#lgUser').value.trim(), 
          password: $('#lgPass').value 
        };
        const res = await fetch(api()+'/api/login', { 
          method:'POST', 
          headers:{'Content-Type':'application/json'}, 
          body: JSON.stringify(payload) 
        });
        const data = await res.json();
        if(!res.ok) throw new Error(data?.message || 'Đăng nhập thất bại');
        
        // Store user details
        if(data.details) {
          localStorage.setItem('userDetails', JSON.stringify(data.details));
        }
        
        setAuth(data.token, data.user);
        closeAll(); 
        toast('Đăng nhập thành công');
        if(queued){ const fn=queued; queued=null; fn(); }
      }catch(e){ $('#lgErr').textContent = e.message || 'Lỗi không xác định'; }
    });

    // ===== Profile Modal =====
    function updateHeaderBalance() {
      try {
        const userDetails = JSON.parse(localStorage.getItem('userDetails') || '{}');
        const balance = userDetails.AvailableBalance;
        $('#headerBalance').textContent = balance ? fmt(balance) : '-';
      } catch(e) {
        $('#headerBalance').textContent = '-';
      }
    }

    $('#profileBtn').addEventListener('click', ()=> {
      // Load user data from localStorage
      try {
        const userData = JSON.parse(localStorage.getItem(userKey) || '{}');
        $('#profileUsername').textContent = userData.username || '-';
        $('#profileUserId').textContent = userData.id || '-';
        
        const userDetails = JSON.parse(localStorage.getItem('userDetails') || '{}');
        $('#profileFullname').textContent = userDetails.Fullname || '-';
        $('#profileEmail').textContent = userDetails.Email || '-';
        $('#profilePhone').textContent = userDetails.PhoneNum || '-';
        $('#profileBalance').textContent = userDetails.AvailableBalance ? fmt(userDetails.AvailableBalance) : '-';
        
        // Update header balance as well
        updateHeaderBalance();
      } catch(e) {
        console.error('Error loading user data:', e);
      }
      openModal('#profileModal');
    });

    $('#profileLogout').addEventListener('click', ()=> {
      clearAuth();
      closeAll();
      toast('Đã đăng xuất thành công');
    });

    // ===== Login guard =====
    function ensureLoginThen(fn){ if(token()) fn(); else { queued=fn; openModal('#loginModal'); } }

    // ===== Welcome modal (show once) =====
    (function(){
      try{
        const seen = localStorage.getItem('seenWelcome');
        if(!seen){ // first visit
          openModal('#welcomeModal');
          // mark as seen when user interacts
          const startBtn = $('#welcomeStart');
          if(startBtn) startBtn.addEventListener('click', ()=>{ 
            localStorage.setItem('seenWelcome','1'); 
            closeAll(); 
            $('#mssv').focus(); 
          });
          // also close on backdrop/close button (closeAll already marks nothing) but mark seen
          document.querySelectorAll('[data-close]').forEach(b=> b.addEventListener('click', ()=> localStorage.setItem('seenWelcome','1')));
          backdrop.addEventListener('click', ()=> localStorage.setItem('seenWelcome','1'));
        }
      }catch(e){ /* ignore localStorage errors */ }
    })();
    
    // ===== Header padding sync & shrink on scroll =====
    (function(){
      const top = document.getElementById('topStrip');
      const hdr = document.getElementById('mainHeader');
      function sync(){
        try{
          const topH = top ? top.getBoundingClientRect().height : 0;
          const hdrH = hdr ? hdr.getBoundingClientRect().height : 0;
          const total = topH + hdrH;
          // Apply padding to the document body so the very first sections (hero) are pushed down
          // keep a small breathing gap (8px) so elements don't touch the header
          document.body.style.paddingTop = (total - 11) + 'px';
          if(hdr) hdr.style.top = (topH) + 'px';
        }catch(e){/* ignore */}
      }
      sync();
      window.addEventListener('resize', sync);

      let lastY=0; const threshold=60;
      window.addEventListener('scroll', ()=>{
        const y = window.scrollY || window.pageYOffset;
        if(!hdr) return;
        if(y>threshold && y>lastY) hdr.classList.add('shrunk');
        else if(y<threshold || y<lastY) hdr.classList.remove('shrunk');
        lastY = y;
        // re-sync padding so layout doesn't jump
        sync();
      }, { passive:true });
    })();
  </script>
</body>
</html>
